// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tendermint/rpc/grpc/types.proto

#include "tendermint/rpc/grpc/types.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace tendermint {
namespace rpc {
namespace grpc {
constexpr RequestPing::RequestPing(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RequestPingDefaultTypeInternal {
  constexpr RequestPingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestPingDefaultTypeInternal() {}
  union {
    RequestPing _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestPingDefaultTypeInternal _RequestPing_default_instance_;
constexpr RequestBroadcastTx::RequestBroadcastTx(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tx_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RequestBroadcastTxDefaultTypeInternal {
  constexpr RequestBroadcastTxDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestBroadcastTxDefaultTypeInternal() {}
  union {
    RequestBroadcastTx _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestBroadcastTxDefaultTypeInternal _RequestBroadcastTx_default_instance_;
constexpr ResponsePing::ResponsePing(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ResponsePingDefaultTypeInternal {
  constexpr ResponsePingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponsePingDefaultTypeInternal() {}
  union {
    ResponsePing _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponsePingDefaultTypeInternal _ResponsePing_default_instance_;
constexpr ResponseBroadcastTx::ResponseBroadcastTx(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : check_tx_(nullptr)
  , deliver_tx_(nullptr){}
struct ResponseBroadcastTxDefaultTypeInternal {
  constexpr ResponseBroadcastTxDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseBroadcastTxDefaultTypeInternal() {}
  union {
    ResponseBroadcastTx _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseBroadcastTxDefaultTypeInternal _ResponseBroadcastTx_default_instance_;
}  // namespace grpc
}  // namespace rpc
}  // namespace tendermint
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tendermint_2frpc_2fgrpc_2ftypes_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tendermint_2frpc_2fgrpc_2ftypes_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tendermint_2frpc_2fgrpc_2ftypes_2eproto = nullptr;

const uint32_t TableStruct_tendermint_2frpc_2fgrpc_2ftypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tendermint::rpc::grpc::RequestPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tendermint::rpc::grpc::RequestBroadcastTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tendermint::rpc::grpc::RequestBroadcastTx, tx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tendermint::rpc::grpc::ResponsePing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tendermint::rpc::grpc::ResponseBroadcastTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tendermint::rpc::grpc::ResponseBroadcastTx, check_tx_),
  PROTOBUF_FIELD_OFFSET(::tendermint::rpc::grpc::ResponseBroadcastTx, deliver_tx_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tendermint::rpc::grpc::RequestPing)},
  { 6, -1, -1, sizeof(::tendermint::rpc::grpc::RequestBroadcastTx)},
  { 13, -1, -1, sizeof(::tendermint::rpc::grpc::ResponsePing)},
  { 19, -1, -1, sizeof(::tendermint::rpc::grpc::ResponseBroadcastTx)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tendermint::rpc::grpc::_RequestPing_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tendermint::rpc::grpc::_RequestBroadcastTx_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tendermint::rpc::grpc::_ResponsePing_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tendermint::rpc::grpc::_ResponseBroadcastTx_default_instance_),
};

const char descriptor_table_protodef_tendermint_2frpc_2fgrpc_2ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037tendermint/rpc/grpc/types.proto\022\023tende"
  "rmint.rpc.grpc\032\033tendermint/abci/types.pr"
  "oto\"\r\n\013RequestPing\" \n\022RequestBroadcastTx"
  "\022\n\n\002tx\030\001 \001(\014\"\016\n\014ResponsePing\"\201\001\n\023Respons"
  "eBroadcastTx\0222\n\010check_tx\030\001 \001(\0132 .tenderm"
  "int.abci.ResponseCheckTx\0226\n\ndeliver_tx\030\002"
  " \001(\0132\".tendermint.abci.ResponseDeliverTx"
  "2\275\001\n\014BroadcastAPI\022K\n\004Ping\022 .tendermint.r"
  "pc.grpc.RequestPing\032!.tendermint.rpc.grp"
  "c.ResponsePing\022`\n\013BroadcastTx\022\'.tendermi"
  "nt.rpc.grpc.RequestBroadcastTx\032(.tenderm"
  "int.rpc.grpc.ResponseBroadcastTxB4Z2gith"
  "ub.com/tendermint/tendermint/rpc/grpc;co"
  "regrpcb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_deps[1] = {
  &::descriptor_table_tendermint_2fabci_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto = {
  false, false, 534, descriptor_table_protodef_tendermint_2frpc_2fgrpc_2ftypes_2eproto, "tendermint/rpc/grpc/types.proto", 
  &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_once, descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_tendermint_2frpc_2fgrpc_2ftypes_2eproto::offsets,
  file_level_metadata_tendermint_2frpc_2fgrpc_2ftypes_2eproto, file_level_enum_descriptors_tendermint_2frpc_2fgrpc_2ftypes_2eproto, file_level_service_descriptors_tendermint_2frpc_2fgrpc_2ftypes_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_getter() {
  return &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_tendermint_2frpc_2fgrpc_2ftypes_2eproto(&descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto);
namespace tendermint {
namespace rpc {
namespace grpc {

// ===================================================================

class RequestPing::_Internal {
 public:
};

RequestPing::RequestPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:tendermint.rpc.grpc.RequestPing)
}
RequestPing::RequestPing(const RequestPing& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tendermint.rpc.grpc.RequestPing)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestPing::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestPing::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RequestPing::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_getter, &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2frpc_2fgrpc_2ftypes_2eproto[0]);
}

// ===================================================================

class RequestBroadcastTx::_Internal {
 public:
};

RequestBroadcastTx::RequestBroadcastTx(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:tendermint.rpc.grpc.RequestBroadcastTx)
}
RequestBroadcastTx::RequestBroadcastTx(const RequestBroadcastTx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tx_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tx_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tx().empty()) {
    tx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tx(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tendermint.rpc.grpc.RequestBroadcastTx)
}

inline void RequestBroadcastTx::SharedCtor() {
tx_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tx_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestBroadcastTx::~RequestBroadcastTx() {
  // @@protoc_insertion_point(destructor:tendermint.rpc.grpc.RequestBroadcastTx)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestBroadcastTx::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tx_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestBroadcastTx::ArenaDtor(void* object) {
  RequestBroadcastTx* _this = reinterpret_cast< RequestBroadcastTx* >(object);
  (void)_this;
}
void RequestBroadcastTx::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestBroadcastTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestBroadcastTx::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.rpc.grpc.RequestBroadcastTx)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tx_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestBroadcastTx::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes tx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tx();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestBroadcastTx::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tendermint.rpc.grpc.RequestBroadcastTx)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tx = 1;
  if (!this->_internal_tx().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_tx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tendermint.rpc.grpc.RequestBroadcastTx)
  return target;
}

size_t RequestBroadcastTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tendermint.rpc.grpc.RequestBroadcastTx)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes tx = 1;
  if (!this->_internal_tx().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestBroadcastTx::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestBroadcastTx::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestBroadcastTx::GetClassData() const { return &_class_data_; }

void RequestBroadcastTx::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestBroadcastTx *>(to)->MergeFrom(
      static_cast<const RequestBroadcastTx &>(from));
}


void RequestBroadcastTx::MergeFrom(const RequestBroadcastTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tendermint.rpc.grpc.RequestBroadcastTx)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tx().empty()) {
    _internal_set_tx(from._internal_tx());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestBroadcastTx::CopyFrom(const RequestBroadcastTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.rpc.grpc.RequestBroadcastTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestBroadcastTx::IsInitialized() const {
  return true;
}

void RequestBroadcastTx::InternalSwap(RequestBroadcastTx* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tx_, lhs_arena,
      &other->tx_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestBroadcastTx::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_getter, &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2frpc_2fgrpc_2ftypes_2eproto[1]);
}

// ===================================================================

class ResponsePing::_Internal {
 public:
};

ResponsePing::ResponsePing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:tendermint.rpc.grpc.ResponsePing)
}
ResponsePing::ResponsePing(const ResponsePing& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tendermint.rpc.grpc.ResponsePing)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponsePing::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponsePing::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResponsePing::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_getter, &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2frpc_2fgrpc_2ftypes_2eproto[2]);
}

// ===================================================================

class ResponseBroadcastTx::_Internal {
 public:
  static const ::tendermint::abci::ResponseCheckTx& check_tx(const ResponseBroadcastTx* msg);
  static const ::tendermint::abci::ResponseDeliverTx& deliver_tx(const ResponseBroadcastTx* msg);
};

const ::tendermint::abci::ResponseCheckTx&
ResponseBroadcastTx::_Internal::check_tx(const ResponseBroadcastTx* msg) {
  return *msg->check_tx_;
}
const ::tendermint::abci::ResponseDeliverTx&
ResponseBroadcastTx::_Internal::deliver_tx(const ResponseBroadcastTx* msg) {
  return *msg->deliver_tx_;
}
void ResponseBroadcastTx::clear_check_tx() {
  if (GetArenaForAllocation() == nullptr && check_tx_ != nullptr) {
    delete check_tx_;
  }
  check_tx_ = nullptr;
}
void ResponseBroadcastTx::clear_deliver_tx() {
  if (GetArenaForAllocation() == nullptr && deliver_tx_ != nullptr) {
    delete deliver_tx_;
  }
  deliver_tx_ = nullptr;
}
ResponseBroadcastTx::ResponseBroadcastTx(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:tendermint.rpc.grpc.ResponseBroadcastTx)
}
ResponseBroadcastTx::ResponseBroadcastTx(const ResponseBroadcastTx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_check_tx()) {
    check_tx_ = new ::tendermint::abci::ResponseCheckTx(*from.check_tx_);
  } else {
    check_tx_ = nullptr;
  }
  if (from._internal_has_deliver_tx()) {
    deliver_tx_ = new ::tendermint::abci::ResponseDeliverTx(*from.deliver_tx_);
  } else {
    deliver_tx_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tendermint.rpc.grpc.ResponseBroadcastTx)
}

inline void ResponseBroadcastTx::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&check_tx_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&deliver_tx_) -
    reinterpret_cast<char*>(&check_tx_)) + sizeof(deliver_tx_));
}

ResponseBroadcastTx::~ResponseBroadcastTx() {
  // @@protoc_insertion_point(destructor:tendermint.rpc.grpc.ResponseBroadcastTx)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseBroadcastTx::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete check_tx_;
  if (this != internal_default_instance()) delete deliver_tx_;
}

void ResponseBroadcastTx::ArenaDtor(void* object) {
  ResponseBroadcastTx* _this = reinterpret_cast< ResponseBroadcastTx* >(object);
  (void)_this;
}
void ResponseBroadcastTx::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseBroadcastTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseBroadcastTx::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.rpc.grpc.ResponseBroadcastTx)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && check_tx_ != nullptr) {
    delete check_tx_;
  }
  check_tx_ = nullptr;
  if (GetArenaForAllocation() == nullptr && deliver_tx_ != nullptr) {
    delete deliver_tx_;
  }
  deliver_tx_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseBroadcastTx::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tendermint.abci.ResponseCheckTx check_tx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_check_tx(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tendermint.abci.ResponseDeliverTx deliver_tx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_deliver_tx(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseBroadcastTx::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tendermint.rpc.grpc.ResponseBroadcastTx)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tendermint.abci.ResponseCheckTx check_tx = 1;
  if (this->_internal_has_check_tx()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::check_tx(this), target, stream);
  }

  // .tendermint.abci.ResponseDeliverTx deliver_tx = 2;
  if (this->_internal_has_deliver_tx()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::deliver_tx(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tendermint.rpc.grpc.ResponseBroadcastTx)
  return target;
}

size_t ResponseBroadcastTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tendermint.rpc.grpc.ResponseBroadcastTx)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tendermint.abci.ResponseCheckTx check_tx = 1;
  if (this->_internal_has_check_tx()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *check_tx_);
  }

  // .tendermint.abci.ResponseDeliverTx deliver_tx = 2;
  if (this->_internal_has_deliver_tx()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deliver_tx_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseBroadcastTx::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseBroadcastTx::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseBroadcastTx::GetClassData() const { return &_class_data_; }

void ResponseBroadcastTx::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseBroadcastTx *>(to)->MergeFrom(
      static_cast<const ResponseBroadcastTx &>(from));
}


void ResponseBroadcastTx::MergeFrom(const ResponseBroadcastTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tendermint.rpc.grpc.ResponseBroadcastTx)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_check_tx()) {
    _internal_mutable_check_tx()->::tendermint::abci::ResponseCheckTx::MergeFrom(from._internal_check_tx());
  }
  if (from._internal_has_deliver_tx()) {
    _internal_mutable_deliver_tx()->::tendermint::abci::ResponseDeliverTx::MergeFrom(from._internal_deliver_tx());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseBroadcastTx::CopyFrom(const ResponseBroadcastTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.rpc.grpc.ResponseBroadcastTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseBroadcastTx::IsInitialized() const {
  return true;
}

void ResponseBroadcastTx::InternalSwap(ResponseBroadcastTx* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseBroadcastTx, deliver_tx_)
      + sizeof(ResponseBroadcastTx::deliver_tx_)
      - PROTOBUF_FIELD_OFFSET(ResponseBroadcastTx, check_tx_)>(
          reinterpret_cast<char*>(&check_tx_),
          reinterpret_cast<char*>(&other->check_tx_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseBroadcastTx::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_getter, &descriptor_table_tendermint_2frpc_2fgrpc_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2frpc_2fgrpc_2ftypes_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc
}  // namespace rpc
}  // namespace tendermint
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tendermint::rpc::grpc::RequestPing* Arena::CreateMaybeMessage< ::tendermint::rpc::grpc::RequestPing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::rpc::grpc::RequestPing >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::rpc::grpc::RequestBroadcastTx* Arena::CreateMaybeMessage< ::tendermint::rpc::grpc::RequestBroadcastTx >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::rpc::grpc::RequestBroadcastTx >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::rpc::grpc::ResponsePing* Arena::CreateMaybeMessage< ::tendermint::rpc::grpc::ResponsePing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::rpc::grpc::ResponsePing >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::rpc::grpc::ResponseBroadcastTx* Arena::CreateMaybeMessage< ::tendermint::rpc::grpc::ResponseBroadcastTx >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::rpc::grpc::ResponseBroadcastTx >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
