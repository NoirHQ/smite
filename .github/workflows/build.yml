name: Build
on:
  pull_request:
  push:
    branches:
      - main
      - release
      - release/**

jobs:
  linux_build:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
      # install conan
      - uses: turtlebrowser/get-conan@main
      # setup build dependencies
      - run: sudo apt install -y libgflags-dev libprotobuf-dev libsodium-dev protobuf-compiler xsltproc
      # checkout
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      # restore cache (conan)
      - uses: actions/cache@v2
        with:
          path: /home/runner/.conan
          key: ${{ runner.os }}-conan-${{ hashFiles('packages.txt') }}
      # restore cache (appbase)
      - id: appbase-cache
        run: echo "::set-output name=version::$(git submodule status | awk '/appbase/{ print $1 }')"
      - uses: actions/cache@v2
        with:
          path: build/libs/appbase/libappbase.a
          key: ${{ runner.os }}-appbase-${{ steps.appbase-cache.outputs.version }}
      # restore cache (softfloat)
      - id: softfloat-cache
        run: echo "::set-output name=version::$(git submodule status | awk '/softfloat/{ print $1 }')"
      - uses: actions/cache@v2
        with:
          path: build/libs/softfloat/libsoftfloat.a
          key: ${{ runner.os }}-softfloat-${{ steps.softfloat-cache.outputs.version }}
      # build
      - run: cmake -E make_directory build
      - run: BOOST_ROOT=/opt/boost cmake .. -DUSE_CACHED_LIBS=ON -DBUILD_SHARED_LIBS=OFF -DCHECK_CONNECTION=OFF && make -j2
        working-directory: ./build
      # test
      # - run: make test
      #   working-directory: ./build

  darwin_build:
    name: MacOS
    runs-on: macos-latest
    steps:
      # install conan
      - uses: turtlebrowser/get-conan@main
      # setup build dependencies
      - run: brew install boost gflags libsodium openssl@3 protobuf
      # checkout
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      # restore cache (conan)
      - uses: actions/cache@v2
        with:
          path: /home/runner/.conan
          key: ${{ runner.os }}-conan-${{ hashFiles('packages_macos.txt') }}
      # restore cache (appbase)
      - id: appbase-cache
        run: echo "::set-output name=version::$(git submodule status | awk '/appbase/{ print $1 }')"
      - uses: actions/cache@v2
        with:
          path: build/libs/appbase/libappbase.a
          key: ${{ runner.os }}-appbase-${{ steps.appbase-cache.outputs.version }}
      # restore cache (softfloat)
      - id: softfloat-cache
        run: echo "::set-output name=version::$(git submodule status | awk '/softfloat/{ print $1 }')"
      - uses: actions/cache@v2
        with:
          path: build/libs/softfloat/libsoftfloat.a
          key: ${{ runner.os }}-softfloat-${{ steps.softfloat-cache.outputs.version }}
      # build
      - run: cmake -E make_directory build
      - run: cmake .. -DUSE_CACHED_LIBS=ON -DBUILD_SHARED_LIBS=OFF && make -j2
        working-directory: ./build
      # test
      # - run: make test
      #   working-directory: ./build
